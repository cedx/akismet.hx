<?php
/**
 * Generated by Haxe 4.1.4
 */

namespace akismet;

use \php\_Boot\HxAnon;
use \php\Boot;

/**
 * Represents the front page or home URL transmitted when making requests.
 */
class Blog implements \JsonSerializable {
	/**
	 * @var string
	 * The character encoding for the values included in comments.
	 */
	public $charset;
	/**
	 * @var \Array_hx
	 * The languages in use on the blog or site, in ISO 639-1 format.
	 */
	public $languages;
	/**
	 * @var string
	 * The blog or site URL.
	 */
	public $url;

	/**
	 * Creates a new blog.
	 * 
	 * @param string $url
	 * @param mixed $options
	 * 
	 * @return void
	 */
	public function __construct ($url, $options = null) {
		$this->languages = new \Array_hx();
		$this->charset = "";
		$this->url = $url;
		if ($options !== null) {
			if (isset($options["charset"])) {
				$this->charset = $options["charset"];
			}
			if (isset($options["languages"])) {
				$this->languages = $options["languages"];
			}
		}
	}

	/**
	 * Converts this object to a map in JSON format.
	 * 
	 * @return mixed
	 */
	final public function jsonSerialize () {
		return $this->toJson();
	}

	/**
	 * Converts this object to a map in JSON format.
	 * 
	 * @return mixed
	 */
	public function toJson () {
		$map = new HxAnon(["blog" => $this->url]);
		if (mb_strlen($this->charset) > 0) {
			\Reflect::setField($map, "blog_charset", $this->charset);
		}
		if ($this->languages->length > 0) {
			\Reflect::setField($map, "blog_lang", $this->languages->join(","));
		}
		return $map;
	}
}

Boot::registerClass(Blog::class, 'akismet.Blog');
