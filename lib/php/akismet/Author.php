<?php
/**
 * Generated by Haxe 4.1.3
 */

namespace akismet;

use \php\_Boot\HxAnon;
use \php\Boot;

/**
 * Represents the author of a comment.
 */
class Author implements \JsonSerializable {
	/**
	 * @var string
	 * The author's mail address. If you set it to `"akismet-guaranteed-spam@example.com"`, Akismet will always return `true`.
	 */
	public $email;
	/**
	 * @var string
	 * The author's IP address.
	 */
	public $ipAddress;
	/**
	 * @var string
	 * The author's name. If you set it to `"viagra-test-123"`, Akismet will always return `true`.
	 */
	public $name;
	/**
	 * @var string
	 * The role of the author. If you set it to `"administrator"`, Akismet will always return `false`.
	 */
	public $role;
	/**
	 * @var string
	 * The URL of the author's website.
	 */
	public $url;
	/**
	 * @var string
	 * The author's user agent, that is the string identifying the Web browser used to submit comments.
	 */
	public $userAgent;

	/**
	 * Creates a new author.
	 * 
	 * @param string $ipAddress
	 * @param string $userAgent
	 * @param mixed $options
	 * 
	 * @return void
	 */
	public function __construct ($ipAddress, $userAgent, $options = null) {
		$this->url = "";
		$this->role = "";
		$this->name = "";
		$this->email = "";
		$this->ipAddress = $ipAddress;
		$this->userAgent = $userAgent;
		if ($options !== null) {
			if (isset($options["email"])) {
				$this->email = $options["email"];
			}
			if (isset($options["name"])) {
				$this->name = $options["name"];
			}
			if (isset($options["role"])) {
				$this->role = $options["role"];
			}
			if (isset($options["url"])) {
				$this->url = $options["url"];
			}
		}
	}

	/**
	 * Converts this object to a map in JSON format.
	 * 
	 * @return mixed
	 */
	public function jsonSerialize () {
		return $this->toJson();
	}

	/**
	 * Converts this object to a map in JSON format.
	 * 
	 * @return mixed
	 */
	public function toJson () {
		$map = new HxAnon([
			"user_agent" => $this->userAgent,
			"user_ip" => $this->ipAddress,
		]);
		if (mb_strlen($this->name) > 0) {
			\Reflect::setField($map, "comment_author", $this->name);
		}
		if (mb_strlen($this->email) > 0) {
			\Reflect::setField($map, "comment_author_email", $this->email);
		}
		if (mb_strlen($this->url) > 0) {
			\Reflect::setField($map, "comment_author_url", $this->url);
		}
		if (mb_strlen($this->role) > 0) {
			\Reflect::setField($map, "user_role", $this->role);
		}
		return $map;
	}
}

Boot::registerClass(Author::class, 'akismet.Author');
